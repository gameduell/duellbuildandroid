buildscript {
 repositories {
    jcenter()
 }

 dependencies {
     classpath 'com.android.tools.build:gradle:2.2.2'

   ::foreach PLATFORM.GRADLE_BUILD_SCRIPT_DEPENDENCIES::
   classpath '::__current__::'
   ::end::
 }
}

apply plugin: 'com.android.application'

android {
 compileSdkVersion ::PLATFORM.TARGET_SDK_VERSION::
 buildToolsVersion "::PLATFORM.BUILD_TOOLS_VERSION::"

 defaultConfig {
   minSdkVersion ::PLATFORM.MINIMUM_SDK_VERSION::
   targetSdkVersion ::PLATFORM.TARGET_SDK_VERSION::
   applicationId '::APP.PACKAGE::'
 }

 signingConfigs {
   release {
     storeFile file("::PLATFORM.KEY_STORE::")
     storePassword "::PLATFORM.KEY_STORE_PASSWORD::"
     keyAlias "::PLATFORM.KEY_STORE_ALIAS::"
     keyPassword "::PLATFORM.KEY_STORE_ALIAS_PASSWORD::"
   }
 }

 buildTypes {
    debug {
        debuggable true
        jniDebuggable true
    }
    release {
		signingConfig signingConfigs.release
        zipAlignEnabled true
    ::if (PLATFORM.PROGUARD_ENABLED)::
        minifyEnabled true
        proguardFiles 'proguard.cfg'
    ::end::
    }
 }

 dexOptions {
     jumboMode = true
     javaMaxHeapSize "2048M"
 }

 configurations {
     provided
 }

sourceSets {
    main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        res.srcDirs = ['res']
        aidl.srcDirs = ['src']
        assets.srcDirs = ['assets']
        jniLibs.srcDirs = ['native-libs']
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

 compileOptions {
   sourceCompatibility JavaVersion.VERSION_1_7
   targetCompatibility JavaVersion.VERSION_1_7
 }

 lintOptions {
   disable 'InvalidPackage'
 }
}

repositories {
    jcenter()

    ::foreach PLATFORM.GRADLE_REPOSITORIES::
    ::NAME:: {
      url "::URL::"
    }
    ::end::
}

dependencies {
    ::foreach PLATFORM.GRADLE_DEPENDENCIES::
    compile '::__current__::'
    ::end::

    ::foreach PLATFORM.GRADLE_COMPILATION_DEPENDENCIES::
    provided '::__current__::'
    ::end::

    ::foreach PLATFORM.GRADLE_ANNOTATION_PROCESSORS::
    annotationProcessor '::__current__::'
    ::end::

	compile fileTree(dir: 'libs', include: ['*.jar'])
}

::foreach PLATFORM.GRADLE_BINARY_PLUGINS::
apply plugin: '::__current__::'
::end::
